name: DOTNET-STANDARD BUILDS
on:
  push:
  pull_request:
  workflow_dispatch:
env:
  CLIENT_FOLDER: 'cybersource-rest-client-dotnetstandard'
  SAMPLE_FOLDER: 'cybersource-rest-samples-csharp'
jobs:
    build-the-dotnet-client:
        strategy:
          fail-fast: false
          matrix:
            operating-system: [windows-latest,ubuntu-latest,macos-latest,macos-13,windows-2019,ubuntu-20.04]
            dotnet-ver: ['3.1.x','5.0','6.0','7.0','8.0']
        defaults:
            run:
              shell: bash
        runs-on: ${{matrix.operating-system}}
        steps:
            - name: Setup git config
              if: runner.os == 'Windows'
              run: |
                git config --global core.longpaths true
            - name: Checkout the dotnet-standard-repo
              uses: actions/checkout@v4
              with:
                path: ${{env.CLIENT_FOLDER}}
            - name: Checkout cybersource-rest-samples-csharp repo
              uses: actions/checkout@v4
              with:
                repository: 'CyberSource/cybersource-rest-samples-csharp'
                ref: 'testing-branch'
                path: ${{env.SAMPLE_FOLDER}}
            - name: SetUp DotNet
              uses: actions/setup-dotnet@v4
              with:
                dotnet-version: ${{matrix.dotnet-ver}}
            - name: Changing the csproj files to reference the local dll files and building the projects and running the tests
              env:
                NET_VER: ${{matrix.dotnet-ver}}
                TARGET_FR: netcoreapp3.1
              run: |
                sed -i -e 's|<PackageReference Include="CyberSource\.Authentication\.NetStandard" Version=".*" \/>|<Reference Include="CyberSource.Authentication.NetStandard">\n  <HintPath>../../cybersource-rest-auth-netstandard/AuthenticationSdk/AuthenticationSdk/bin/Release/netstandard2.1/Cybersource.Authentication.NetStandard.dll</HintPath>\n  <Private>true</Private>\n</Reference>|g' cybersource-rest-client-dotnetstandard/cybersource-rest-client-netstandard/cybersource-rest-client-netstandard/cybersource-rest-client-netstandard.csproj
                sed -i -e 's|<PackageReference Include="CyberSource\.Authentication\.NetStandard" Version=".*" />|<Reference Include="CyberSource.Authentication.NetStandard">\n  <HintPath>../cybersource-rest-client-dotnetstandard/cybersource-rest-auth-netstandard/AuthenticationSdk/AuthenticationSdk/bin/Release/netstandard2.1/Cybersource.Authentication.NetStandard.dll</HintPath>\n  <Private>true</Private>\n</Reference>|g' cybersource-rest-samples-csharp/cybersource-rest-samples-netcore.csproj
                sed -i -e 's|<PackageReference Include="CyberSource\.Rest\.Client\.NetStandard" Version=".*" />|<Reference Include="CyberSource.Rest.Client.NetStandard">\n  <HintPath>../cybersource-rest-client-dotnetstandard/cybersource-rest-client-netstandard/cybersource-rest-client-netstandard/bin/Release/netstandard2.1/cybersource-rest-client-netstandard.dll</HintPath>\n  <Private>true</Private>\n</Reference>|g' cybersource-rest-samples-csharp/cybersource-rest-samples-netcore.csproj
                if [ $NET_VER != '3.1.x' ]; then
                  export TARGET_FR=net${NET_VER}
                  sed -i -e 's|<TargetFramework>.*</TargetFramework>|<TargetFramework>${TARGET_FR}</TargetFramework>|g' cybersource-rest-samples-csharp/cybersource-rest-samples-netcore.csproj
                fi
                sed  's|<TargetFramework>.*</TargetFramework>|<TargetFramework>${TARGET_FR}</TargetFramework>|g' cybersource-rest-samples-csharp/cybersource-rest-samples-netcore.csproj
                echo $TARGET_FR
                echo "Before Auth Build"
                dotnet build $CLIENT_FOLDER/cybersource-rest-auth-netstandard/AuthenticationSdk/AuthenticationSdk/AuthenticationSdk.csproj -c release
                echo "Before Client Build"
                dotnet build $CLIENT_FOLDER/cybersource-rest-client-netstandard/cybersource-rest-client-netstandard/cybersource-rest-client-netstandard.csproj -c release
                echo "Before Samples Build"
                dotnet build $SAMPLE_FOLDER/cybersource-rest-samples-netcore.csproj -c release
                cd $SAMPLE_FOLDER/bin/Release/$TARGET_FR
                echo "Running Samples"
                ./SampleCodeNetCore -RunAll > output.log
                cp output.log ../../../
            - name: Setup Python v3.12 for report generation only
              uses: actions/setup-python@v5
              with:
                python-version: 3.12
            - name: Installing required python libraries and running the python programs to generate pdf report
              run : |
                python -m pip install --upgrade pip
                pip install json2html
                pip install xhtml2pdf
                pip install bs4
                cd $SAMPLE_FOLDER/Validation
                python sample_code_log_processor.py -l ../../$SAMPLE_FOLDER/output.log -o ../../$SAMPLE_FOLDER/python_actual_results.json
                python sample_code_log_processor.py -l ../../$SAMPLE_FOLDER/output.log -o ../../$SAMPLE_FOLDER/csharp_actual_results.json
                python response_code_validator.py -e ExpectedResults/csharp_expected_results.json -a ../../$SAMPLE_FOLDER/csharp_actual_results.json -o csharp_validation_results.json
                python json_to_prettified_html.py -i csharp_validation_results.json -o csharp_validation_results.html
                cp csharp_validation_results.pdf ../  #copying the file to flatten the directory of the upload artifact,Github Actions doesn't support that as of jun 2024
            - name: Upload the Log files
              uses: actions/upload-artifact@v4
              with:
                name: log-file-${{matrix.operating-system}}-dotnet-std-ver-${{matrix.dotnet-ver}}
                path: |
                  ${{env.SAMPLE_FOLDER}}/csharp_validation_results.pdf
                  ${{env.SAMPLE_FOLDER}}/output.log


